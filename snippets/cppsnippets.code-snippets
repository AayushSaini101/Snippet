{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
    // }
    
    "Bubble Sort": {
        "prefix": "!BubbleSort",
        "body": [
          "void BubbleSort(int arr[], int n)",
          "{",
          "    int counter = 1;",
          "    bool swap;",
          "    while(counter < n)",
          "    {",
          "        swap = false;",
          "        for(int i=0; i < n-counter; i++)",
          "        {",
          "            if(arr[i]>arr[i+1])",
          "            {",
          "                int temp = arr[i];",
          "                arr[i] = arr[i+1];",
          "                arr[i+1] = temp;",
          "                swap = true;",
          "            }",
          "        }",
          "        if (swap == false) ",
          "            break;",
          "        counter++;",
          "    }",
          "}"
        ],
        "description": "Bubble Sort"
      },

      "Insertion Sort": {
        "prefix": "!InsertionSort",
        "body": [
          "void InsertionSort(int arr[], int n)",
          "{",
          "    for(int i=0; i<n; i++)",
          "    {",
          "        int current = arr[i];",
          "        int j=i-1;",
          "        while (arr[j]>current && j>=0)",
          "        {",
          "            arr[j+1] = arr[j];",
          "            j--;",
          "        }",
          "        arr[j+1] = current;",
          "    }",
          "}"
        ],
        "description": "Insertion Sort"
      }
      
}

